// <auto-generated />
using ConsoleApp5;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ConsoleApp5.Migrations
{
    [DbContext(typeof(ShopContext))]
    partial class ShopContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsoleApp5.Tables.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MilksProduct"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Eats"
                        });
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Cityes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountriesId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CountriesId");

                    b.ToTable("Cityes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountriesId = 1,
                            Name = "London"
                        },
                        new
                        {
                            Id = 2,
                            CountriesId = 2,
                            Name = "Porish"
                        });
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Countries", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "British"
                        },
                        new
                        {
                            Id = 2,
                            Name = "France"
                        });
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Positions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manaher"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Casir"
                        });
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriesId")
                        .HasColumnType("int");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsinStock")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriesId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoriesId = 1,
                            Discount = 10f,
                            IsinStock = true,
                            Name = "Kefir",
                            Price = 20.0m,
                            Quantity = 1000
                        },
                        new
                        {
                            Id = 2,
                            CategoriesId = 2,
                            Discount = 5f,
                            IsinStock = true,
                            Name = "Bread",
                            Price = 10.4m,
                            Quantity = 1000
                        });
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Shops", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(90)
                        .HasColumnType("nvarchar(90)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ParkingArea")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Shops");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Kiivska 17",
                            CityId = 1,
                            Name = "Volmart",
                            ParkingArea = 10
                        },
                        new
                        {
                            Id = 2,
                            Address = "Soborna 34",
                            CityId = 2,
                            Name = "ATB",
                            ParkingArea = 5
                        });
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Workers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(225)
                        .HasColumnType("nvarchar(225)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.HasIndex("ShopsId");

                    b.ToTable("Workers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "feficar4354@gmail.com",
                            Name = "Ivan",
                            PhoneNumber = "0653457395",
                            PositionId = 1,
                            Salary = 10000.0m,
                            ShopsId = 1,
                            SurName = "Turmac"
                        },
                        new
                        {
                            Id = 2,
                            Email = "emilell34@gmail,com",
                            Name = "Misha",
                            PhoneNumber = "0979735594",
                            PositionId = 2,
                            Salary = 9000.0m,
                            ShopsId = 2,
                            SurName = "Tchumak"
                        });
                });

            modelBuilder.Entity("ProductsShops", b =>
                {
                    b.Property<int>("ProductsId")
                        .HasColumnType("int");

                    b.Property<int>("ShopsId")
                        .HasColumnType("int");

                    b.HasKey("ProductsId", "ShopsId");

                    b.HasIndex("ShopsId");

                    b.ToTable("ProductsShops");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Cityes", b =>
                {
                    b.HasOne("ConsoleApp5.Tables.Countries", "Countries")
                        .WithMany("Cityes")
                        .HasForeignKey("CountriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Countries");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Products", b =>
                {
                    b.HasOne("ConsoleApp5.Tables.Categories", "Categories")
                        .WithMany("Products")
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categories");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Shops", b =>
                {
                    b.HasOne("ConsoleApp5.Tables.Cityes", "Cityes")
                        .WithMany("Shops")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cityes");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Workers", b =>
                {
                    b.HasOne("ConsoleApp5.Tables.Positions", "Positions")
                        .WithMany("Workers")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp5.Tables.Shops", "Shops")
                        .WithMany("Workers")
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Positions");

                    b.Navigation("Shops");
                });

            modelBuilder.Entity("ProductsShops", b =>
                {
                    b.HasOne("ConsoleApp5.Tables.Products", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ConsoleApp5.Tables.Shops", null)
                        .WithMany()
                        .HasForeignKey("ShopsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Categories", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Cityes", b =>
                {
                    b.Navigation("Shops");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Countries", b =>
                {
                    b.Navigation("Cityes");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Positions", b =>
                {
                    b.Navigation("Workers");
                });

            modelBuilder.Entity("ConsoleApp5.Tables.Shops", b =>
                {
                    b.Navigation("Workers");
                });
#pragma warning restore 612, 618
        }
    }
}
